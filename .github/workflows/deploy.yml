# Ref - https://github.com/appleboy/ssh-action

# Deployment Workflow Overview:

# 1. Docker Hub Push:
#    - The CI pipeline builds and pushes the Docker image containing the Turbo monorepo apps to Docker Hub.
#    - Note: This image doesn't include PostgreSQL as the database will be managed remotely by Neon.tech or Avion.io.

# 2. EC2 Server Setup:
#    - Create an EC2 server instance with an Ubuntu base image.
#    - Download the keypair file for secure SSH access.
#    - Ensure HTTP/HTTPS traffic is allowed in the security group.
#    - Install Docker on the EC2 instance using the official Docker installation guide:
#      - https://docs.docker.com/engine/install/ubuntu/
#    - Verify the Docker installation by running: `sudo docker run hello-world`

# 3. Docker Image Deployment on EC2:
#    - In the deployment workflow, the EC2 instance pulls the latest Docker image from Docker Hub.
#    - Set the `DATABASE_URL` environment variable to point to the Neon.tech or Avion.io PostgreSQL instance.
#    - This ensures the application connects to the database remotely when running on the EC2 instance.

# Note: Make sure to add the necessary secrets (e.g., SSH credentials, Docker Hub credentials) in GitHub Actions for secure deployment.



# name: Build and Deploy to Docker Hub and EC2

# on:
#   push:
#     branches:
#       - master

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout Code
#       uses: actions/checkout@v3

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     - name: Log in to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Build and Push Docker Image
#       uses: docker/build-push-action@v4
#       with:
#         context: .
#         file: ./Dockerfile
#         push: true
#         tags: your-docker-hub-username/fintransact-app:latest

#   deploy-to-ec2:
#     needs: build-and-push
#     runs-on: ubuntu-latest

#     steps:
#     - name: Deploy to EC2
#       uses: appleboy/ssh-action@v0.1.7
#       with:
#         host: ${{ secrets.SSH_HOST }}
#         username: ${{ secrets.SSH_USERNAME }}
#         key: ${{ secrets.SSH_KEY }}
#         script: |
#           # Stop and remove the existing container if running
#           sudo docker stop fintransact_app || true
#           sudo docker rm fintransact_app || true

#           # Pull the latest image from Docker Hub
#           sudo docker pull your-docker-hub-username/fintransact-app:latest

#           # Run the container with the new image
#           sudo docker run -d \
#             --name fintransact_app \
#             -p 5173:5173 \
#             -p 4004:4004 \
#             -p 4008:4008 \
#             -p 4000:4000 \
#             -e DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres \
#             -e NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} \
#             -e NEXTAUTH_URL=http://localhost:4004 \
#             -e JWT_SECRET=myjwtsecret \
#             -e GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
#             -e GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
#             -e GITHUB_ID=${{ secrets.GITHUB_ID }} \
#             -e GITHUB_SECRET=${{ secrets.GITHUB_SECRET }} \
#             -e BWS_TOKEN_VAL=mybwstoken \
#             -e FINTRANSACT_FRONTEND_URL=http://localhost:5173 \
#             -e WEBHOOK_BACKEND_URL=http://localhost:4000 \
#             your-docker-hub-username/fintransact-app:latest

